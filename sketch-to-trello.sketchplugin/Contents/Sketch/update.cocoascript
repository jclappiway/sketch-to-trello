@import "api.cocoascript"

var tarball = null;
var sha = null;
var pluginPath = null;
var downloadPath = '/tmp/';
var downloadAs = '/tmp/sketch-to-trello.tar.gz';
var downloadUrl = 'https://github.com/jclappiway/sketch-to-trello/archive/master.tar.gz';
var downloadName = 'sketch-to-trello-master';

var update = function(context){
    doc = context.document;
    pluginPath = context.scriptPath.split('sketch-to-trello.sketchplugin')[0];
    // pluginPath = [NSString stringWithFormat:@'%@', pluginPath.replace(' ', '\\ ')];

    log(pluginPath);
    var pluginSketchPath = [NSString stringWithFormat:@'%@', context.scriptPath.replace(/\/(\w*)\.cocoascript$/, '//')];
    var manifestContent = [NSData dataWithContentsOfFile: [NSString stringWithFormat:@'%@manifest.json', pluginSketchPath]];
    var manifest = [NSJSONSerialization JSONObjectWithData:manifestContent options:nil error:nil];
    log(parseFloat(manifest.version));
    var currentVersion = parseFloat(manifest.version);

    var response = getJSON('https://raw.githubusercontent.com/jclappiway/sketch-to-trello/master/sketch-to-trello.sketchplugin/Contents/Sketch/manifest.json');
    var release_version = parseFloat(response.version);

    // var release = getJSON('https://api.github.com/repos/jclappiway/sketch-to-trello/releases/latest');
    // var release_version = parseFloat(release.tag_name);
    // tarball = release.tarball_url;
    if(currentVersion < release_version){
      downloadTar();
    }
}


var downloadTar = function(){
  var task = NSTask.alloc().init();

  task.setLaunchPath("/usr/bin/curl");
  var args = NSArray.arrayWithObjects("-o", downloadAs, "-L", downloadUrl);
  task.setArguments(args);
  task.launch();
  task.waitUntilExit();

  int status = [task terminationStatus];

  if (status == 0) {
    untar()
  }
}

var untar = function(){
  var task = NSTask.alloc().init();

  task.setLaunchPath("/usr/bin/tar");
  var args = NSArray.arrayWithObjects("-C", downloadPath, "-xf", downloadAs);
  task.setArguments(args);
  task.launch();
  task.waitUntilExit();

  int status = [task terminationStatus];

  if (status == 0) {
    moove()
  }
}

var moove = function(){
  var task = NSTask.alloc().init();

  task.setLaunchPath("/bin/cp");
  log(downloadPath+downloadName);
  log(pluginPath);
  var args = NSArray.arrayWithObjects("-R", downloadPath+downloadName+'/sketch-to-trello.sketchplugin', pluginPath);
  task.setArguments(args);
  task.launch();
  task.waitUntilExit();

  int status = [task terminationStatus];

  if (status == 0) {
    log('its mooved');
  }
}
