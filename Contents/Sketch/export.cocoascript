var onRun = function (context) {
    var doc = context.document;
    
    if (![doc fileURL] || [doc isDraft]) {
        [NSApp displayDialog:@"Please save the document before exporting to Zeplin." withTitle:@"Document not saved"];
        return;
    }
    
    if ([doc isDocumentEdited]) {
        var alert = [NSAlert alertWithMessageText:@"Document not saved" defaultButton:@"Save and Continue" alternateButton:@"Cancel" otherButton:@"Continue" informativeTextWithFormat:@"To capture the latest changes in this Sketch document, Zeplin needs to save it first.\n\n☝️ This might take a bit, depending on the document size."];
        
        var response = [alert runModal];
        if (response == NSAlertDefaultReturn) {
            [doc showMessage:@"Saving document…"];
            
            [doc saveDocument:nil];
            while ([doc isDocumentEdited]) {
                [[NSRunLoop currentRunLoop] runMode:NSDefaultRunLoopMode beforeDate:[NSDate distantFuture]];
            }
        }
        
        else if (response == NSAlertAlternateReturn) {
            return;
        }
        
        response = nil;
        alert = nil;
    }
    
    var artboardIds = [[context valueForKey:@"selection"] valueForKeyPath:@"parentArtboard.@distinctUnionOfObjects.objectID"];
    
    var validArtboardIds = [NSMutableArray array];
    var loop = [artboardIds objectEnumerator];
    while (artboardId = [loop nextObject]) {
        if ([artboardId isKindOfClass:[NSString class]]) {
            [validArtboardIds addObject:artboardId];
        }
    }
    
    loop = nil;
    
    artboardIds = [validArtboardIds copy];
    
    validArtboardIds = nil;
    
    if (![artboardIds count]) {
        [NSApp displayDialog:@"Please select the artboards you want to export to Zeplin.\n\n☝️ Selecting a layer inside the artboard should be enough." withTitle:@"No artboard selected"];
        return;
    }
    
    var name = [[[NSUUID UUID] UUIDString] stringByAppendingPathExtension:@"zpl"];
    var temporaryDirectory = NSTemporaryDirectory();
    var path = [temporaryDirectory stringByAppendingPathComponent:name];
    
    temporaryDirectory = nil;
    name = nil;
    
    var version = [[NSBundle mainBundle] objectForInfoDictionaryKey:@"CFBundleShortVersionString"];
    var sketchtoolPath = [[NSBundle mainBundle] pathForResource:@"sketchtool" ofType:nil inDirectory:@"sketchtool/bin"];
    var sketchmigratePath = [[NSBundle mainBundle] pathForResource:@"sketchmigrate" ofType:nil inDirectory:@"sketchtool/bin"];
    
    var directives = [NSMutableDictionary dictionary];
    [directives setObject:[[doc fileURL] path] forKey:@"path"];
    [directives setObject:artboardIds forKey:@"artboardIds"];
    if (version) {
        [directives setObject:version forKey:@"version"];
    }
    if (sketchtoolPath) {
        [directives setObject:sketchtoolPath forKey:@"sketchtoolPath"];
    }
    if (sketchmigratePath) {
        [directives setObject:sketchmigratePath forKey:@"sketchmigratePath"];
    }
    
    version = nil;
    sketchmigratePath = nil;
    sketchtoolPath = nil;
    artboardIds = nil;
    
    [directives writeToFile:path atomically:false];
    directives = nil;
    
    var workspace = [NSWorkspace sharedWorkspace];
    
    var applicationPath = [workspace absolutePathForAppBundleWithIdentifier:@"io.zeplin.osx"];
    if (!applicationPath) {
        [NSApp displayDialog:@"Please make sure that you installed and launched it: https://zpl.io/download" withTitle:"Could not find Zeplin"];
        return;
    }
    
    [doc showMessage:@"Launching Zeplin!"];
    
    [workspace openFile:path withApplication:applicationPath andDeactivate:true];
    
    workspace = nil;
    applicationPath = nil;
    path = nil;
}
